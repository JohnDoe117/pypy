<?xml version="1.0" encoding="utf-8"?>
<mx:Application 
    xmlns:mx="http://www.adobe.com/2006/mxml" 
    viewSourceURL="src/GettingStartedActionScript/index.html"

    creationComplete="__flash_main();"
    width="300" height="80"
 >

    <mx:Script>

        <![CDATA[


// we should put the imports here.
import mx.controls.Button;


import py.*;
//import py.f.DictIter;


// starts hand written code
var MALLOC_ZERO_FILLED = 0;

var print = trace;




Function.prototype.method = function (name, func) {
    this.prototype[name] = func;
    return this;
};

function inherits(child, parent) {
    child.parent = parent;
    for (var i in parent.prototype) {
        if (!child.prototype[i]) {
            child.prototype[i] = parent.prototype[i];
        }
    }
}

function isinstanceof(self, what) {

    //return self instanceof what;


    if (!self) {
        return (false);
    }
    var t = self.constructor;
    while ( t ) {
        if (t == what) {
            return (true);
        }
        t = t.parent;
    }
    return (false);
}

/*function delitem(fn, l, i) {
    for(var j = i; j < l.length-1; ++j) {
        l[j] = l[j+1];
    }
    l.length--;
}*/

function strcmp(s1, s2) {
    if ( s1 < s2 ) {
        return ( -1 );
    } else if ( s1 == s2 ) {
        return ( 0 );
    }
    return (1);
}

function startswith(s1, s2) {
    if (s1.length < s2.length) {
        return(false);
    }
    for (var i = 0; i < s2.length; ++i){
        if (s1.charAt(i) != s2.charAt(i)) {
            return(false);
        }
    }
    return(true);
}

function endswith(s1, s2) {
    if (s2.length > s1.length) {
        return(false);
    }
    for (var i = s1.length-s2.length; i < s1.length; ++i) {
        if (s1.charAt(i) != s2.charAt(i - s1.length + s2.length)) {
            return(false);
        }
    }
    return(true);
}

function splitchr(s, ch) {
    var i, lst, next;
    lst = [];
    next = "";
    for (var i = 0; i<s.length; ++i) {
        if (s.charAt(i) == ch) {
            lst.length += 1;
            lst[lst.length-1] = next;
            next = "";
        } else {
            next += s.charAt(i);
        }
    }
    lst.length += 1;
    lst[lst.length-1] = next;
    return (lst);
}


function dict_items_iterator(d) {
    var d2 = new DictIter();
    //var d2 = {};
    var l = [];
    for (var i in d) {
        l.length += 1;
        l[l.length-1] = i;
    }
    d2.l = l;
    d2.current_key = undefined;
    return d2;
}

function get_dict_len(d) {
    var count;
    count = 0;
    for (var i in d) {
        count += 1;
    }
    return (count);
}





function time() {
    var d;
    d = new Date();
    return d/1000;
}

var main_clock_stuff;

function clock() {
    if (main_clock_stuff) {
        //return (new Date() - main_clock_stuff)/1000;
        return 111;
    } else {
        main_clock_stuff = new Date();
        return 0;
    }
}

function substring(s, l, c) {
    return (s.substring(l, l+c));
}

function clear_dict(d) {
    for (var elem in d) {
        delete(d[elem]);
    }
}

function findIndexOf(s1, s2, start, end) {
    if (start > end || start > s1.length) {
        return -1;
    }
    s1 = s1.substr(start, end-start);
    var res = s1.indexOf(s2);
    if (res == -1) {
        return -1;
    }
    return res + start;
}

function findIndexOfTrue(s1, s2) {
    return findIndexOf(s1, s2, 0, s1.length) != -1;
}

function countCharOf(s, c, start, end) {
    s = s.substring(start, end);
    var i = 0;
    for (var c1 in s) {
        if (s[c1] == c) {
            i++;
        }
    }
    return(i);
}

function countOf(s, s1, start, end) {
    var ret = findIndexOf(s, s1, start, end);
    var i = 0;
    var lgt = 1;
    if (s1.length > 0) {
        lgt = s1.length;
    }
    while (ret != -1) {
        i++;
        ret = findIndexOf(s, s1, ret + lgt, end);
    }
    return (i);
}

function convertToString(stuff) {
    if (stuff === undefined) {
       return ("undefined");
    }
    return (stuff.toString());
}    


function __flash_main() {


    var aaa = new Button();
    aaa.label = "before consts";
    addChild ( aaa );



    __load_consts_flex()

    aaa.label = "after consts";
    flash_main(1)
}


public function flexTrace( text:String ):void {
    var myUrl:URLRequest = new URLRequest("javascript:console.log('" + text + "');void(0);");
    sendToURL(myUrl);
}

// wrapper for throw, because flex compiler weirdness.
function throwit(e) {
    throw(e);
}


// ends hand written code



function some_strange_function_which_will_never_be_called () {
    var v1,v2;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v1 = 1;
            v2 = flash_main ( v1 );
            block = 1;
            break;
            case 1:
            return ( undefined );
        }
    }
}

function flash_main (a_0) {
    var v3,v4,v5,a_1,v6,v7,last_exc_value_0,a_2,x_0,v8,v9,v10,v11,v14,v15;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v4 = ll_newrange__Record_start__Signed__stop__Si_Signed_Signed ( 0,20 );
            v5 = ll_rangeiter__Record_stop__Signed__next__Sig_Record_start__Signed__stop__Si ( v4 );
            a_1 = a_0;
            v6 = v5;
            block = 1;
            break;
            case 1:
            try {
                v7 = ll_rangenext_up__Record_stop__Signed__next__Sig_Signed ( v6,1 );
                a_2 = a_1;
                x_0 = v7;
                v8 = v6;
                block = 2;
                break;
            }
            catch (exc){
                if (isinstanceof(exc, exceptions_StopIteration))
                {
                    v14 = a_1;
                    block = 3;
                    break;
                }
                throwit(exc);
            }
            case 2:
            v9 = new Button();
            v10 = ll_int_str__IntegerR_SignedConst_Signed ( x_0 );
            v11 = ll_strconcat__String_String ( __consts_0.const_str,v10 );
            v9.label = v11;
            addChild ( v9 );
            a_1 = a_2;
            v6 = v8;
            block = 1;
            break;
            case 3:
            v15 = (v14+1);
            v3 = v15;
            block = 4;
            break;
            case 4:
            return ( v3 );
        }
    }
}

function ll_strconcat__String_String (obj_0,arg0_0) {
    var v39,v40,v41;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v41 = (obj_0+arg0_0);
            v39 = v41;
            block = 1;
            break;
            case 1:
            return ( v39 );
        }
    }
}

function ll_newrange__Record_start__Signed__stop__Si_Signed_Signed (start_0,stop_0) {
    var v16,v17;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v17 = new Object();
            v17.start = start_0;
            v17.stop = stop_0;
            v16 = v17;
            block = 1;
            break;
            case 1:
            return ( v16 );
        }
    }
}

function ll_rangeiter__Record_stop__Signed__next__Sig_Record_start__Signed__stop__Si (rng_0) {
    var v20,v21,v22,v24;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v21 = new Object();
            v22 = rng_0.start;
            v21.next = v22;
            v24 = rng_0.stop;
            v21.stop = v24;
            v20 = v21;
            block = 1;
            break;
            case 1:
            return ( v20 );
        }
    }
}

function ll_int_str__IntegerR_SignedConst_Signed (i_0) {
    var v37,v38;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v38 = ll_int2dec__Signed ( i_0 );
            v37 = v38;
            block = 1;
            break;
            case 1:
            return ( v37 );
        }
    }
}

function ll_rangenext_up__Record_stop__Signed__next__Sig_Signed (iter_0,step_0) {
    var v26,v27,v28,v29,v30,iter_1,next_0,v31,v32,v34,v35,v36,etype_0,evalue_0;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v27 = iter_0.next;
            v28 = iter_0.stop;
            v29 = (v27>=v28);
            iter_1 = iter_0;
            next_0 = v27;
            v31 = step_0;
            if (v29 == false)
            {
                block = 1;
                break;
            }
            block = 3;
            break;
            case 1:
            v32 = (next_0+v31);
            iter_1.next = v32;
            v26 = next_0;
            block = 2;
            break;
            case 3:
            v34 = __consts_0.exceptions_StopIteration;
            v35 = v34.meta;
            etype_0 = v35;
            evalue_0 = v34;
            block = 4;
            break;
            case 4:
            throwit(evalue_0);
            case 2:
            return ( v26 );
        }
    }
}

function ll_int2dec__Signed (i_1) {
    var v42,v43;
    var block = 0;
    for(;;){
        switch(block){
            case 0:
            v43 = convertToString ( i_1 );
            v42 = v43;
            block = 1;
            break;
            case 1:
            return ( v42 );
        }
    }
}

var __consts_0 = {}
function __load_consts_flex() 
{
    __consts_0.exceptions_StopIteration__3 = exceptions_StopIteration;
    __consts_0.exceptions_StopIteration_meta = new exceptions_StopIteration_meta();
    __consts_0.exceptions_StopIteration = new exceptions_StopIteration();
    __consts_0.const_str = "I'm button :";
    __consts_0.exceptions_StopIteration_meta.class_ = __consts_0.exceptions_StopIteration__3;
    __consts_0.exceptions_StopIteration.meta = __consts_0.exceptions_StopIteration_meta;
}

        ]]>
    </mx:Script>
</mx:Application>
